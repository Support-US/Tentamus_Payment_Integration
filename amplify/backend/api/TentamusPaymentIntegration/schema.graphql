
type PaymentDetails
  @model
  @auth(
    rules: [
      { allow: public, provider: apiKey, operations: [read, create, update] }
    ]
  ) {
  id: ID!
  FirstName: String!
  LastName: String!
  CompanyName: String!
  Email: String! 
  AddressLine1: String!
  AddressLine2: String
  Country: String!
  State: String!
  City: String
  PostalCode: String!
  PhoneNumber: String!
  Amount: String!
  Currency: String!
  InvoiceNumbers: AWSJSON!
  PaymentId: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  PaymentStatus: String!
  CurrencyDecimalDigit: String
  BeforePaymentSAPstatus: String
  AfterPaymentSAPstatus: String
  SAPErrorMessage: String
  SAPObjectID: String
  Description: String
  PaymentMailStatus: String
  SAPMailStatus: String
  ClientName: String
  ClientCompanyID: String
  MaskedCardNumber: String
}


type UserCardDetails
  @model
  @auth(
    rules: [
      { allow: public, provider: apiKey, operations: [read, create, update] }
    ]
  ) {
  id: ID!
  Email: ID! @index(name: "CardByEmail", queryField: "listCardsByEmail", sortKeyFields: ["createdAt"])
  cardHolderName: String!
  cardBrand: String!
  expiryDate: String!
  pcnrNumber: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}
