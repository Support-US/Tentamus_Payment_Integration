#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )

## Retrieve Secrets from AWS Secrets Manager
#set( $secretsManager = $util.aws.sdk.AWS.createSecretsManagerClient() )
#set( $secretName = "Tentamus_Payment_Integration" )

#set( $getSecretValueRequest = {
  "SecretId": $secretName
} )

#set( $secretValueResponse = $secretsManager.getSecretValue($getSecretValueRequest) )
#set( $secret = $secretValueResponse.secretString )
#set( $secretJson = $util.parseJson($secret) )

## Extract the required values from the secret
#set( $secretValue1 = $secretJson.OdataUsername)
#set( $secretValue2 = $secretJson.OdataPassword )

## Add the secret values to the mergedValues
$util.qr($mergedValues.put("SecretValue1", $secretValue1))
$util.qr($mergedValues.put("SecretValue2", $secretValue2))

## Set other default values
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
$util.qr($mergedValues.put("__typename", "PaymentDetails"))

## Continue with the existing resolver logic
#set( $PutObject = {
  "version": "2018-05-29",
  "operation": "PutItem",
  "attributeValues": $util.dynamodb.toMapValues($mergedValues),
  "condition": $condition
} )

#set( $ctx.stash.metadata.modelObjectKey = {
  "id": $util.defaultIfNull($args.input.id, $util.autoId()),
} )

#if( $args.condition )
  $util.qr($ctx.stash.conditions.add($args.condition))
#end
